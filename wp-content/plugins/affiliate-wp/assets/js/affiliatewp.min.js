function _typeof(o){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o})(o)}var affiliatewp=window.affiliatewp||{attach:function(name){var resource=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},localizedData=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},windowObjectToDelete=3<arguments.length&&void 0!==arguments[3]&&arguments[3];if(this.hasOwnProperty(name))throw new Error("Resource '".concat(name,"' is already registered in the affiliatewp object."));this[name]=this.extend(resource,localizedData),"string"==typeof windowObjectToDelete&&window.hasOwnProperty(windowObjectToDelete)&&!delete window[name]&&(window[name]=null)},extend:function(){return Object.assign(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},1<arguments.length&&void 0!==arguments[1]?arguments[1]:{})},detach:function(name){var resource;return this.hasOwnProperty(name)?(resource=this[name],delete this[name]||(this[name]=null),resource):null},has:function(name){return this.hasOwnProperty(name)},parseArgs:function(args){var _mergeObjects,defaults=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return"object"!==_typeof(args)||"object"!==_typeof(defaults)?(console.error("You must provide two valid objects"),{}):(_mergeObjects=function(arg,def){for(var key in arg){var hasKey=arg.hasOwnProperty(key);hasKey&&"object"===_typeof(arg[key])&&"object"===_typeof(def[key])?_mergeObjects(arg[key],def[key]):hasKey&&(def[key]=arg[key])}return def})(args,defaults)}};